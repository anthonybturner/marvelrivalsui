{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./hero-board.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./hero-board.component.scss?ngResource\";\nimport { Component } from '@angular/core';\nimport { BehaviorSubject, map, Subject, takeUntil } from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { HeroBoardService } from './services/hero-board.service';\nimport { HeroService } from '../heroes/services/hero.service';\nlet HeroBoardComponent = class HeroBoardComponent {\n  constructor(activatedRoute, heroBoardService, heroService) {\n    this.activatedRoute = activatedRoute;\n    this.heroBoardService = heroBoardService;\n    this.heroService = heroService;\n    this.players = [];\n    this.ngUnsubscribe = new Subject();\n    this.isLoading = false;\n    this.heroName = '';\n    this.hero$ = new BehaviorSubject(undefined);\n    this.heroes$ = new BehaviorSubject(undefined);\n  }\n  ngOnInit() {\n    this.activatedRoute.data.pipe(takeUntil(this.ngUnsubscribe), map(results => results[\"resolvedData\"])).subscribe(players => {\n      this.players = players;\n      this.heroService.getHeroes().subscribe({\n        next: response => {\n          this.heroes$.next(response.heros);\n        }\n      });\n    });\n  }\n  getImageUrl(imagePath, type = 'hero') {\n    // Handle missing or invalid paths\n    if (!imagePath) {\n      return this.getFallbackImageUrl(type);\n    }\n    // Normalize path (remove leading/trailing slashes)\n    const normalizedPath = imagePath.replace(/^\\/+|\\/+$/g, '');\n    // Validate and construct URL\n    try {\n      const basePaths = {\n        hero: 'https://marvelrivalsapi.com/',\n        ability: 'https://marvelrivalsapi.com/rivals/'\n      };\n      return new URL(normalizedPath, basePaths[type]).href;\n    } catch {\n      return this.getFallbackImageUrl(type);\n    }\n  }\n  getFallbackImageUrl(type) {\n    return type === 'hero' ? 'assets/images/logo.png' : 'assets/images/logo.png';\n  }\n  onSearch() {\n    if (!this.heroName) return;\n    this.isLoading = true;\n    //Fetch players for the searched hero\n    this.getPlayersForSearchedHero(this.heroName);\n    // Retrieve searched hero details\n    this.getSearchedHeroDetails(this.heroName);\n  }\n  getSearchedHeroDetails(heroName) {\n    const heroes = this.heroes$.getValue()?.heros ?? [];\n    for (let hero of heroes) {\n      if (hero.name.toLowerCase() === heroName.toLowerCase()) {\n        this.hero$.next(hero);\n        break;\n      }\n    }\n  }\n  getPlayersForSearchedHero(heroName) {\n    this.heroBoardService.getPlayers(heroName).subscribe({\n      next: response => {\n        this.players = response.players;\n        this.isLoading = false;\n      },\n      error: () => {\n        this.players = [];\n        this.hero$.next(undefined);\n        this.isLoading = false;\n      }\n    });\n  }\n  onHeroSelected(value) {\n    this.getPlayersForSearchedHero(value);\n  }\n  ngOnDestroy() {\n    this.ngUnsubscribe.next(null);\n    this.ngUnsubscribe.complete();\n  }\n  static {\n    this.ctorParameters = () => [{\n      type: ActivatedRoute\n    }, {\n      type: HeroBoardService\n    }, {\n      type: HeroService\n    }];\n  }\n};\nHeroBoardComponent = __decorate([Component({\n  selector: 'mr-player',\n  standalone: false,\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], HeroBoardComponent);\nexport { HeroBoardComponent };","map":{"version":3,"names":["Component","BehaviorSubject","map","Subject","takeUntil","ActivatedRoute","HeroBoardService","HeroService","HeroBoardComponent","constructor","activatedRoute","heroBoardService","heroService","players","ngUnsubscribe","isLoading","heroName","hero$","undefined","heroes$","ngOnInit","data","pipe","results","subscribe","getHeroes","next","response","heros","getImageUrl","imagePath","type","getFallbackImageUrl","normalizedPath","replace","basePaths","hero","ability","URL","href","onSearch","getPlayersForSearchedHero","getSearchedHeroDetails","heroes","getValue","name","toLowerCase","getPlayers","error","onHeroSelected","value","ngOnDestroy","complete","__decorate","selector","standalone","template","__NG_CLI_RESOURCE__0"],"sources":["E:\\repos\\mrui-web\\src\\app\\hero-board\\hero-board.component.ts"],"sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { IHeroBoardPlayer, IHeroBoardResponse } from './data/models/hero-board-resolved-data';\r\nimport { BehaviorSubject, map, Subject, takeUntil } from 'rxjs';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HeroBoardGridlistComponent } from \"./hero-board-gridlist/hero-board-gridlist.component\";\r\nimport { HeroBoardService } from './services/hero-board.service';\r\nimport { HeroService } from '../heroes/services/hero.service';\r\nimport { IHero, IHeroResponse, IHerosResponse } from '../heroes/data/models/hero.model';\r\n\r\n@Component({\r\n  selector: 'mr-player',\r\n  standalone: false,\r\n  templateUrl: './hero-board.component.html',\r\n  styleUrl: './hero-board.component.scss'\r\n})\r\nexport class HeroBoardComponent implements OnInit, OnDestroy {\r\n  players: IHeroBoardPlayer[] = []\r\n  ngUnsubscribe = new Subject();\r\n  isLoading: boolean = false;\r\n  heroName: string = '';\r\n  hero$ = new BehaviorSubject<IHero | undefined>(undefined);\r\n  heroes$ = new BehaviorSubject<IHero[] | undefined>(undefined);\r\n  selectedHero: IHero | undefined;\r\n\r\n  constructor(private activatedRoute: ActivatedRoute, private heroBoardService: HeroBoardService, private heroService: HeroService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.data\r\n      .pipe(\r\n        takeUntil(this.ngUnsubscribe),\r\n        map((results) => results[\"resolvedData\"] as IHeroBoardPlayer[])\r\n      )\r\n      .subscribe((players) => {\r\n        this.players = players;\r\n        this.heroService.getHeroes().subscribe({\r\n          next: (response: IHerosResponse) =>{\r\n            this.heroes$.next(response.heros);\r\n          }\r\n        });\r\n      });\r\n  }\r\n\r\n  getImageUrl(imagePath: string | undefined, type: 'hero' | 'ability' = 'hero'): string {\r\n    // Handle missing or invalid paths\r\n    if (!imagePath) {\r\n      return this.getFallbackImageUrl(type);\r\n    }\r\n\r\n    // Normalize path (remove leading/trailing slashes)\r\n    const normalizedPath = imagePath.replace(/^\\/+|\\/+$/g, '');\r\n\r\n    // Validate and construct URL\r\n    try {\r\n      const basePaths = {\r\n        hero: 'https://marvelrivalsapi.com/',\r\n        ability: 'https://marvelrivalsapi.com/rivals/'\r\n      };\r\n      return new URL(normalizedPath, basePaths[type]).href;\r\n    } catch {\r\n      return this.getFallbackImageUrl(type);\r\n    }\r\n  }\r\n\r\n  private getFallbackImageUrl(type: 'hero' | 'ability'): string {\r\n    return type === 'hero'\r\n      ? 'assets/images/logo.png'\r\n      : 'assets/images/logo.png';\r\n  }\r\n\r\n  onSearch() {\r\n    if (!this.heroName) return;\r\n    this.isLoading = true;\r\n    //Fetch players for the searched hero\r\n    this.getPlayersForSearchedHero(this.heroName);\r\n    // Retrieve searched hero details\r\n    this.getSearchedHeroDetails(this.heroName);\r\n  }\r\n\r\n  getSearchedHeroDetails(heroName: string) {\r\n    const heroes = this.heroes$.getValue()?.heros ?? [];\r\n    for (let hero of heroes) {\r\n      if (hero.name.toLowerCase() === heroName.toLowerCase()) {\r\n        this.hero$.next(hero);\r\n        break;\r\n      }\r\n    } \r\n  };\r\n\r\n  getPlayersForSearchedHero(heroName: string) {\r\n    this.heroBoardService.getPlayers(heroName).subscribe({\r\n      next: (response) => {\r\n        this.players = response.players;\r\n\r\n        this.isLoading = false;\r\n      },\r\n      error: () => {\r\n        this.players = [];\r\n        this.hero$.next(undefined);\r\n        this.isLoading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  onHeroSelected(value : string){\r\n    this.getPlayersForSearchedHero(value);\r\n  }\r\n\r\n    ngOnDestroy(): void {\r\n      this.ngUnsubscribe.next(null);\r\n      this.ngUnsubscribe.complete();\r\n  }\r\n\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}