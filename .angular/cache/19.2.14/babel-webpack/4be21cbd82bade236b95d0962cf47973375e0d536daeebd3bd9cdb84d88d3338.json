{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./hero-board-gridlist.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./hero-board-gridlist.component.scss?ngResource\";\nimport { Component, Input } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ClientSideRowModelModule } from 'ag-grid-community';\nimport { Subject, takeUntil } from 'rxjs';\nlet HeroBoardGridlistComponent = class HeroBoardGridlistComponent {\n  constructor(activatedRoute) {\n    this.activatedRoute = activatedRoute;\n    this.columnDefs = [];\n    this.rowData = [];\n    this.ngUnsubscribe = new Subject();\n    this.isLoading = false;\n    this.modules = [ClientSideRowModelModule];\n  }\n  ngOnInit() {\n    // Column Definitions: Defines the columns to be displayed.\n    this.setColumnDefs();\n    this.activatedRoute.data.pipe(takeUntil(this.ngUnsubscribe)).subscribe(results => {});\n  }\n  setColumnDefs() {\n    this.columnDefs = [{\n      headerName: \"Name\",\n      valueGetter: params => params.data.info?.name\n    },\n    //{ headerName: \"Icon ID\", valueGetter: params => params.data.info?.cur_head_icon_id },\n    // { headerName: \"Player UID\", field: \"player_uid\" },\n    {\n      headerName: \"Matches\",\n      field: \"matches\"\n    }, {\n      headerName: \"Wins\",\n      field: \"wins\"\n    }, {\n      headerName: \"Win Rate\",\n      valueGetter: params => params.data.matches ? (params.data.wins / params.data.matches).toFixed(2) : \"0\"\n    }, {\n      headerName: \"Final Hits\",\n      field: \"Kills\"\n    }, {\n      headerName: \"Deaths\",\n      field: \"deaths\"\n    }, {\n      headerName: \"Assists\",\n      field: \"assists\"\n    }, {\n      headerName: \"Play Time\",\n      field: \"play_time\"\n    }, {\n      headerName: \"Total Hero Damage\",\n      field: \"total_hero_damage\"\n    }, {\n      headerName: \"Total Damage Taken\",\n      field: \"total_damage_taken\"\n    }, {\n      headerName: \"Total Hero Heal\",\n      field: \"total_hero_heal\"\n    }, {\n      headerName: \"MVPs\",\n      field: \"mvps\"\n    }, {\n      headerName: \"SVPs\",\n      field: \"svps\"\n    }];\n  }\n  ngOnDestroy() {}\n  static {\n    this.ctorParameters = () => [{\n      type: ActivatedRoute\n    }];\n  }\n  static {\n    this.propDecorators = {\n      rowData: [{\n        type: Input\n      }]\n    };\n  }\n};\nHeroBoardGridlistComponent = __decorate([Component({\n  selector: 'mr-heroboard-gridlist',\n  standalone: false,\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], HeroBoardGridlistComponent);\nexport { HeroBoardGridlistComponent };","map":{"version":3,"names":["Component","Input","ActivatedRoute","ClientSideRowModelModule","Subject","takeUntil","HeroBoardGridlistComponent","constructor","activatedRoute","columnDefs","rowData","ngUnsubscribe","isLoading","modules","ngOnInit","setColumnDefs","data","pipe","subscribe","results","headerName","valueGetter","params","info","name","field","matches","wins","toFixed","ngOnDestroy","__decorate","selector","standalone","template","__NG_CLI_RESOURCE__0"],"sources":["E:\\repos\\mrui-web\\src\\app\\hero-board\\hero-board-gridlist\\hero-board-gridlist.component.ts"],"sourcesContent":["import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ClientSideRowModelModule, ColDef} from 'ag-grid-community';\r\nimport { Subject, takeUntil } from 'rxjs';\r\nimport { IHeroBoardPlayer } from '../data/models/hero-board-resolved-data';\r\n\r\n@Component({\r\n  selector: 'mr-heroboard-gridlist',\r\n  standalone: false,\r\n  templateUrl: './hero-board-gridlist.component.html',\r\n  styleUrl: './hero-board-gridlist.component.scss'\r\n})\r\nexport class HeroBoardGridlistComponent implements OnInit, OnDestroy {\r\n  \r\n  columnDefs: ColDef[] = [];\r\n  @Input() rowData: IHeroBoardPlayer[] = [];\r\n  ngUnsubscribe = new Subject();\r\n  isLoading: boolean = false;\r\n  public modules = [ClientSideRowModelModule,];\r\n\r\n  constructor(private activatedRoute: ActivatedRoute){}\r\n\r\n  ngOnInit(): void{\r\n\r\n    // Column Definitions: Defines the columns to be displayed.\r\n    this.setColumnDefs();\r\n    this.activatedRoute.data.pipe(takeUntil(this.ngUnsubscribe)).subscribe((results) =>{\r\n    })\r\n  }\r\n    \r\n  private setColumnDefs() {\r\n    this.columnDefs = [\r\n      { headerName: \"Name\", valueGetter: params => params.data.info?.name },\r\n      //{ headerName: \"Icon ID\", valueGetter: params => params.data.info?.cur_head_icon_id },\r\n     // { headerName: \"Player UID\", field: \"player_uid\" },\r\n      { headerName: \"Matches\", field: \"matches\" },\r\n      { headerName: \"Wins\", field: \"wins\" },\r\n      { headerName: \"Win Rate\", valueGetter: params => params.data.matches ? (params.data.wins / params.data.matches).toFixed(2) : \"0\" },\r\n      { headerName: \"Final Hits\", field: \"Kills\" },\r\n      { headerName: \"Deaths\", field: \"deaths\" },\r\n      { headerName: \"Assists\", field: \"assists\" },\r\n      { headerName: \"Play Time\", field: \"play_time\" },\r\n      { headerName: \"Total Hero Damage\", field: \"total_hero_damage\" },\r\n      { headerName: \"Total Damage Taken\", field: \"total_damage_taken\" },\r\n      { headerName: \"Total Hero Heal\", field: \"total_hero_heal\" },\r\n      { headerName: \"MVPs\", field: \"mvps\" },\r\n      { headerName: \"SVPs\", field: \"svps\" },\r\n    ];\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    \r\n  }\r\n\r\n}"],"mappings":";;;AAAA,SAASA,SAAS,EAAEC,KAAK,QAA2B,eAAe;AACnE,SAASC,cAAc,QAAQ,iBAAiB;AAChD,SAASC,wBAAwB,QAAe,mBAAmB;AACnE,SAASC,OAAO,EAAEC,SAAS,QAAQ,MAAM;AASlC,IAAMC,0BAA0B,GAAhC,MAAMA,0BAA0B;EAQrCC,YAAoBC,cAA8B;IAA9B,KAAAA,cAAc,GAAdA,cAAc;IANlC,KAAAC,UAAU,GAAa,EAAE;IAChB,KAAAC,OAAO,GAAuB,EAAE;IACzC,KAAAC,aAAa,GAAG,IAAIP,OAAO,EAAE;IAC7B,KAAAQ,SAAS,GAAY,KAAK;IACnB,KAAAC,OAAO,GAAG,CAACV,wBAAwB,CAAE;EAEQ;EAEpDW,QAAQA,CAAA;IAEN;IACA,IAAI,CAACC,aAAa,EAAE;IACpB,IAAI,CAACP,cAAc,CAACQ,IAAI,CAACC,IAAI,CAACZ,SAAS,CAAC,IAAI,CAACM,aAAa,CAAC,CAAC,CAACO,SAAS,CAAEC,OAAO,IAAI,CACnF,CAAC,CAAC;EACJ;EAEQJ,aAAaA,CAAA;IACnB,IAAI,CAACN,UAAU,GAAG,CAChB;MAAEW,UAAU,EAAE,MAAM;MAAEC,WAAW,EAAEC,MAAM,IAAIA,MAAM,CAACN,IAAI,CAACO,IAAI,EAAEC;IAAI,CAAE;IACrE;IACD;IACC;MAAEJ,UAAU,EAAE,SAAS;MAAEK,KAAK,EAAE;IAAS,CAAE,EAC3C;MAAEL,UAAU,EAAE,MAAM;MAAEK,KAAK,EAAE;IAAM,CAAE,EACrC;MAAEL,UAAU,EAAE,UAAU;MAAEC,WAAW,EAAEC,MAAM,IAAIA,MAAM,CAACN,IAAI,CAACU,OAAO,GAAG,CAACJ,MAAM,CAACN,IAAI,CAACW,IAAI,GAAGL,MAAM,CAACN,IAAI,CAACU,OAAO,EAAEE,OAAO,CAAC,CAAC,CAAC,GAAG;IAAG,CAAE,EAClI;MAAER,UAAU,EAAE,YAAY;MAAEK,KAAK,EAAE;IAAO,CAAE,EAC5C;MAAEL,UAAU,EAAE,QAAQ;MAAEK,KAAK,EAAE;IAAQ,CAAE,EACzC;MAAEL,UAAU,EAAE,SAAS;MAAEK,KAAK,EAAE;IAAS,CAAE,EAC3C;MAAEL,UAAU,EAAE,WAAW;MAAEK,KAAK,EAAE;IAAW,CAAE,EAC/C;MAAEL,UAAU,EAAE,mBAAmB;MAAEK,KAAK,EAAE;IAAmB,CAAE,EAC/D;MAAEL,UAAU,EAAE,oBAAoB;MAAEK,KAAK,EAAE;IAAoB,CAAE,EACjE;MAAEL,UAAU,EAAE,iBAAiB;MAAEK,KAAK,EAAE;IAAiB,CAAE,EAC3D;MAAEL,UAAU,EAAE,MAAM;MAAEK,KAAK,EAAE;IAAM,CAAE,EACrC;MAAEL,UAAU,EAAE,MAAM;MAAEK,KAAK,EAAE;IAAM,CAAE,CACtC;EACH;EAEAI,WAAWA,CAAA,GAEX;;;;;;;;;cArCC5B;MAAK;;;;AAHKK,0BAA0B,GAAAwB,UAAA,EANtC9B,SAAS,CAAC;EACT+B,QAAQ,EAAE,uBAAuB;EACjCC,UAAU,EAAE,KAAK;EACjBC,QAAA,EAAAC,oBAAmD;;CAEpD,CAAC,C,EACW5B,0BAA0B,CA0CtC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}